// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using muchos_motors_api.EntityFramework;

namespace muchosmotorsapi.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20240103100740_addCity")]
    partial class addCity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("muchos_motors_api.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AppointmentTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AppointmentTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.HasKey("AppointmentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("muchos_motors_api.Models.AuthenticationCode", b =>
                {
                    b.Property<int>("AuthenticationCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeSent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isValid")
                        .HasColumnType("bit");

                    b.HasKey("AuthenticationCodeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AuthenticationCode");
                });

            modelBuilder.Entity("muchos_motors_api.Models.AuthenticationToken", b =>
                {
                    b.Property<int>("AuthenticationTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthenticationTokenId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("AuthenticationToken");
                });

            modelBuilder.Entity("muchos_motors_api.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChasisNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EngineSize")
                        .HasColumnType("float");

                    b.Property<int>("GenericGenerationCarModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("LicencePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Segment")
                        .HasColumnType("int");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trim")
                        .HasColumnType("int");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("GenericGenerationCarModelId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("muchos_motors_api.Models.CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarBrandId");

                    b.ToTable("CarBrand");

                    b.HasData(
                        new
                        {
                            CarBrandId = 1,
                            IsValid = true,
                            Name = "BMW"
                        },
                        new
                        {
                            CarBrandId = 2,
                            IsValid = true,
                            Name = "Audi"
                        },
                        new
                        {
                            CarBrandId = 3,
                            IsValid = true,
                            Name = "Mercedes"
                        },
                        new
                        {
                            CarBrandId = 4,
                            IsValid = true,
                            Name = "Skoda"
                        },
                        new
                        {
                            CarBrandId = 5,
                            IsValid = true,
                            Name = "Volkswagen"
                        },
                        new
                        {
                            CarBrandId = 6,
                            IsValid = true,
                            Name = "Opel"
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.CarPart", b =>
                {
                    b.Property<int>("CarPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarPartCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseCount")
                        .HasColumnType("int");

                    b.HasKey("CarPartId");

                    b.ToTable("CarPart");

                    b.HasData(
                        new
                        {
                            CarPartId = 1,
                            CarPartCategory = "Engine",
                            Code = "XK-2312",
                            Details = "dobra roba",
                            IsValid = true,
                            Name = "Pumpa",
                            PurchasePrice = 2m,
                            SellingPrice = 4.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 2,
                            CarPartCategory = "Engine",
                            Code = "31-2222",
                            Details = "dobra roba",
                            IsValid = true,
                            Name = "Svjećica",
                            PurchasePrice = 38m,
                            SellingPrice = 42.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 3,
                            CarPartCategory = "Engine",
                            Code = "sf-1111",
                            Details = "Ok",
                            IsValid = true,
                            Name = "Ulje za motor",
                            PurchasePrice = 30m,
                            SellingPrice = 32.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 4,
                            CarPartCategory = "BrakeSystem",
                            Code = "zt-3333",
                            Details = "Ok",
                            IsValid = true,
                            Name = "Kocioni sistem",
                            PurchasePrice = 370m,
                            SellingPrice = 42.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 5,
                            CarPartCategory = "Engine",
                            Code = "SS-5512",
                            Details = "Ok",
                            IsValid = true,
                            Name = "Filter za gorivo",
                            PurchasePrice = 16m,
                            SellingPrice = 22.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 6,
                            CarPartCategory = "Electrical",
                            Code = "ABC-123",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Akumulator",
                            PurchasePrice = 12.5m,
                            SellingPrice = 19.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 7,
                            CarPartCategory = "ExhaustSystem",
                            Code = "XYZ-789",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Lambda sonda",
                            PurchasePrice = 18.75m,
                            SellingPrice = 29.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 8,
                            CarPartCategory = "Engine",
                            Code = "LMN-456",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Filter zraka",
                            PurchasePrice = 10.25m,
                            SellingPrice = 15.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 9,
                            CarPartCategory = "Suspension",
                            Code = "PQR-789",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Amortizer",
                            PurchasePrice = 45.5m,
                            SellingPrice = 59.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 10,
                            CarPartCategory = "ExhaustSystem",
                            Code = "DEF-012",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Katalizator",
                            PurchasePrice = 85.75m,
                            SellingPrice = 99.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 11,
                            CarPartCategory = "Transmission",
                            Code = "GHJ-345",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Kvačilo",
                            PurchasePrice = 62.5m,
                            SellingPrice = 79.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 12,
                            CarPartCategory = "Transmission",
                            Code = "IJK-678",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Set kvačila",
                            PurchasePrice = 95.75m,
                            SellingPrice = 119.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 13,
                            CarPartCategory = "Engine",
                            Code = "MNO-910",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Senzor položaja bregaste",
                            PurchasePrice = 22.5m,
                            SellingPrice = 29.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 14,
                            CarPartCategory = "Engine",
                            Code = "PQR-111",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Rashladni ventilator",
                            PurchasePrice = 38.75m,
                            SellingPrice = 49.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 15,
                            CarPartCategory = "BrakeSystem",
                            Code = "STU-222",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Kočioni disk",
                            PurchasePrice = 28.5m,
                            SellingPrice = 39.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 16,
                            CarPartCategory = "Engine",
                            Code = "VWX-333",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Zupčasti remen",
                            PurchasePrice = 12.75m,
                            SellingPrice = 15.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 17,
                            CarPartCategory = "Suspension",
                            Code = "YZA-444",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Amortizer zadnji",
                            PurchasePrice = 54.5m,
                            SellingPrice = 69.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 18,
                            CarPartCategory = "Suspension",
                            Code = "BCD-555",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Stabilizator prednji",
                            PurchasePrice = 22.75m,
                            SellingPrice = 29.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 19,
                            CarPartCategory = "Engine",
                            Code = "EFG-666",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Filter ulja",
                            PurchasePrice = 9.5m,
                            SellingPrice = 12.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 20,
                            CarPartCategory = "ExhaustSystem",
                            Code = "HIJ-777",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Sonda lambda",
                            PurchasePrice = 32.75m,
                            SellingPrice = 39.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 21,
                            CarPartCategory = "BrakeSystem",
                            Code = "KLM-888",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Disk kočnica zadnji",
                            PurchasePrice = 18.5m,
                            SellingPrice = 25.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 22,
                            CarPartCategory = "Engine",
                            Code = "NOP-999",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Remen alternatora",
                            PurchasePrice = 8.75m,
                            SellingPrice = 10.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 23,
                            CarPartCategory = "Exterior",
                            Code = "QRS-000",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Set brava vrata",
                            PurchasePrice = 38.5m,
                            SellingPrice = 49.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 24,
                            CarPartCategory = "Exterior",
                            Code = "TUV-111",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Kopča auspuha",
                            PurchasePrice = 5.5m,
                            SellingPrice = 8.99m,
                            WarehouseCount = 10
                        },
                        new
                        {
                            CarPartId = 25,
                            CarPartCategory = "Suspension",
                            Code = "WXY-222",
                            Details = "Example details",
                            IsValid = true,
                            Name = "Osovinica",
                            PurchasePrice = 12.75m,
                            SellingPrice = 15.99m,
                            WarehouseCount = 10
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.CarPartBrand", b =>
                {
                    b.Property<int>("CarPartBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarPartBrandId");

                    b.ToTable("CarPartBrand");

                    b.HasData(
                        new
                        {
                            CarPartBrandId = 1,
                            IsValid = false,
                            Name = "A.B.S."
                        },
                        new
                        {
                            CarPartBrandId = 2,
                            IsValid = false,
                            Name = "Dinex"
                        },
                        new
                        {
                            CarPartBrandId = 3,
                            IsValid = false,
                            Name = "AC cosmetics"
                        },
                        new
                        {
                            CarPartBrandId = 4,
                            IsValid = false,
                            Name = "Diederichs"
                        },
                        new
                        {
                            CarPartBrandId = 5,
                            IsValid = false,
                            Name = "Airtex"
                        },
                        new
                        {
                            CarPartBrandId = 6,
                            IsValid = false,
                            Name = "AJS"
                        },
                        new
                        {
                            CarPartBrandId = 7,
                            IsValid = false,
                            Name = "Delphi"
                        },
                        new
                        {
                            CarPartBrandId = 8,
                            IsValid = false,
                            Name = "Denso"
                        },
                        new
                        {
                            CarPartBrandId = 9,
                            IsValid = false,
                            Name = "Pascal"
                        },
                        new
                        {
                            CarPartBrandId = 10,
                            IsValid = false,
                            Name = "Payen"
                        },
                        new
                        {
                            CarPartBrandId = 11,
                            IsValid = false,
                            Name = "Peters"
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.CarPartsCompatibility", b =>
                {
                    b.Property<int>("CarPartsCompatibilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarPartId")
                        .HasColumnType("int");

                    b.Property<int>("GenericCarModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.HasKey("CarPartsCompatibilityId");

                    b.HasIndex("CarPartId");

                    b.HasIndex("GenericCarModelId");

                    b.ToTable("CarPartsCompatibility");

                    b.HasData(
                        new
                        {
                            CarPartsCompatibilityId = 1,
                            CarPartId = 1,
                            GenericCarModelId = 2,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 2,
                            CarPartId = 2,
                            GenericCarModelId = 3,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 3,
                            CarPartId = 3,
                            GenericCarModelId = 4,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 4,
                            CarPartId = 4,
                            GenericCarModelId = 5,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 5,
                            CarPartId = 5,
                            GenericCarModelId = 6,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 6,
                            CarPartId = 6,
                            GenericCarModelId = 7,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 7,
                            CarPartId = 7,
                            GenericCarModelId = 8,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 8,
                            CarPartId = 8,
                            GenericCarModelId = 9,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 9,
                            CarPartId = 9,
                            GenericCarModelId = 10,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 10,
                            CarPartId = 10,
                            GenericCarModelId = 11,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 11,
                            CarPartId = 11,
                            GenericCarModelId = 12,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 12,
                            CarPartId = 12,
                            GenericCarModelId = 13,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 13,
                            CarPartId = 13,
                            GenericCarModelId = 14,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 14,
                            CarPartId = 14,
                            GenericCarModelId = 15,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 15,
                            CarPartId = 15,
                            GenericCarModelId = 16,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 16,
                            CarPartId = 16,
                            GenericCarModelId = 17,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 17,
                            CarPartId = 17,
                            GenericCarModelId = 18,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 18,
                            CarPartId = 18,
                            GenericCarModelId = 19,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 19,
                            CarPartId = 19,
                            GenericCarModelId = 20,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 20,
                            CarPartId = 20,
                            GenericCarModelId = 20,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 21,
                            CarPartId = 21,
                            GenericCarModelId = 20,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 22,
                            CarPartId = 22,
                            GenericCarModelId = 20,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 23,
                            CarPartId = 23,
                            GenericCarModelId = 2,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 24,
                            CarPartId = 24,
                            GenericCarModelId = 3,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 26,
                            CarPartId = 25,
                            GenericCarModelId = 4,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 27,
                            CarPartId = 25,
                            GenericCarModelId = 15,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 28,
                            CarPartId = 1,
                            GenericCarModelId = 6,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 29,
                            CarPartId = 2,
                            GenericCarModelId = 7,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 30,
                            CarPartId = 3,
                            GenericCarModelId = 8,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 31,
                            CarPartId = 4,
                            GenericCarModelId = 9,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 32,
                            CarPartId = 5,
                            GenericCarModelId = 10,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 33,
                            CarPartId = 6,
                            GenericCarModelId = 11,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 34,
                            CarPartId = 7,
                            GenericCarModelId = 12,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 35,
                            CarPartId = 8,
                            GenericCarModelId = 13,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 36,
                            CarPartId = 9,
                            GenericCarModelId = 14,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 37,
                            CarPartId = 10,
                            GenericCarModelId = 15,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 38,
                            CarPartId = 11,
                            GenericCarModelId = 16,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 39,
                            CarPartId = 12,
                            GenericCarModelId = 17,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 40,
                            CarPartId = 13,
                            GenericCarModelId = 18,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 41,
                            CarPartId = 14,
                            GenericCarModelId = 19,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 42,
                            CarPartId = 15,
                            GenericCarModelId = 20,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 43,
                            CarPartId = 16,
                            GenericCarModelId = 21,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 44,
                            CarPartId = 17,
                            GenericCarModelId = 22,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 45,
                            CarPartId = 18,
                            GenericCarModelId = 23,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 46,
                            CarPartId = 19,
                            GenericCarModelId = 24,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 47,
                            CarPartId = 20,
                            GenericCarModelId = 25,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 48,
                            CarPartId = 21,
                            GenericCarModelId = 26,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 49,
                            CarPartId = 22,
                            GenericCarModelId = 27,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 50,
                            CarPartId = 23,
                            GenericCarModelId = 29,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 51,
                            CarPartId = 14,
                            GenericCarModelId = 2,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 52,
                            CarPartId = 16,
                            GenericCarModelId = 3,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 53,
                            CarPartId = 17,
                            GenericCarModelId = 4,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 54,
                            CarPartId = 1,
                            GenericCarModelId = 5,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 55,
                            CarPartId = 2,
                            GenericCarModelId = 6,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 56,
                            CarPartId = 3,
                            GenericCarModelId = 7,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 57,
                            CarPartId = 4,
                            GenericCarModelId = 8,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 58,
                            CarPartId = 5,
                            GenericCarModelId = 9,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 59,
                            CarPartId = 6,
                            GenericCarModelId = 10,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 60,
                            CarPartId = 7,
                            GenericCarModelId = 11,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 61,
                            CarPartId = 8,
                            GenericCarModelId = 12,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 62,
                            CarPartId = 9,
                            GenericCarModelId = 13,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 63,
                            CarPartId = 10,
                            GenericCarModelId = 14,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 64,
                            CarPartId = 11,
                            GenericCarModelId = 15,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 65,
                            CarPartId = 12,
                            GenericCarModelId = 16,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 66,
                            CarPartId = 13,
                            GenericCarModelId = 17,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 67,
                            CarPartId = 14,
                            GenericCarModelId = 18,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 68,
                            CarPartId = 15,
                            GenericCarModelId = 19,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 69,
                            CarPartId = 16,
                            GenericCarModelId = 20,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 70,
                            CarPartId = 17,
                            GenericCarModelId = 21,
                            IsValid = true
                        },
                        new
                        {
                            CarPartsCompatibilityId = 71,
                            CarPartId = 18,
                            GenericCarModelId = 22,
                            IsValid = true
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            IsValid = true,
                            Name = "Donji Vakuf",
                            PostCode = "72000"
                        },
                        new
                        {
                            CityId = 2,
                            IsValid = true,
                            Name = "Mostar",
                            PostCode = "88000"
                        },
                        new
                        {
                            CityId = 3,
                            IsValid = true,
                            Name = "Visoko",
                            PostCode = "71300"
                        },
                        new
                        {
                            CityId = 4,
                            IsValid = true,
                            Name = "Tuzla",
                            PostCode = "75000"
                        },
                        new
                        {
                            CityId = 5,
                            IsValid = true,
                            Name = "Zenica",
                            PostCode = "72000"
                        },
                        new
                        {
                            CityId = 6,
                            IsValid = true,
                            Name = "Jablanica",
                            PostCode = "88420"
                        },
                        new
                        {
                            CityId = 7,
                            IsValid = true,
                            Name = "Konjic",
                            PostCode = "88400"
                        },
                        new
                        {
                            CityId = 8,
                            IsValid = true,
                            Name = "Ljubuški",
                            PostCode = "88320"
                        },
                        new
                        {
                            CityId = 9,
                            IsValid = true,
                            Name = "Maglaj",
                            PostCode = "74250"
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.ErrorLog", b =>
                {
                    b.Property<int>("ErrorAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ErrorAuditId");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("muchos_motors_api.Models.GenericCarModel", b =>
                {
                    b.Property<int>("GenericCarModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<string>("GenerationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionEndYear")
                        .HasColumnType("int");

                    b.Property<int>("ProductionStartYear")
                        .HasColumnType("int");

                    b.HasKey("GenericCarModelId");

                    b.HasIndex("CarBrandId");

                    b.ToTable("GenericCarModel");

                    b.HasData(
                        new
                        {
                            GenericCarModelId = 1,
                            CarBrandId = 1,
                            GenerationName = "G05",
                            IsValid = true,
                            ModelName = "X5",
                            ProductionEndYear = 2022,
                            ProductionStartYear = 2018
                        },
                        new
                        {
                            GenericCarModelId = 2,
                            CarBrandId = 2,
                            GenerationName = "B9",
                            IsValid = true,
                            ModelName = "A4",
                            ProductionEndYear = 2019,
                            ProductionStartYear = 2015
                        },
                        new
                        {
                            GenericCarModelId = 3,
                            CarBrandId = 3,
                            GenerationName = "W213",
                            IsValid = true,
                            ModelName = "E-Class",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2016
                        },
                        new
                        {
                            GenericCarModelId = 4,
                            CarBrandId = 4,
                            GenerationName = "MK3",
                            IsValid = true,
                            ModelName = "Octavia",
                            ProductionEndYear = 2019,
                            ProductionStartYear = 2012
                        },
                        new
                        {
                            GenericCarModelId = 5,
                            CarBrandId = 5,
                            GenerationName = "MK7",
                            IsValid = true,
                            ModelName = "Golf",
                            ProductionEndYear = 2019,
                            ProductionStartYear = 2012
                        },
                        new
                        {
                            GenericCarModelId = 6,
                            CarBrandId = 6,
                            GenerationName = "K",
                            IsValid = true,
                            ModelName = "Astra",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2015
                        },
                        new
                        {
                            GenericCarModelId = 7,
                            CarBrandId = 1,
                            GenerationName = "G20",
                            IsValid = true,
                            ModelName = "3 Series",
                            ProductionEndYear = 2023,
                            ProductionStartYear = 2019
                        },
                        new
                        {
                            GenericCarModelId = 8,
                            CarBrandId = 2,
                            GenerationName = "FY",
                            IsValid = true,
                            ModelName = "Q5",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2016
                        },
                        new
                        {
                            GenericCarModelId = 9,
                            CarBrandId = 3,
                            GenerationName = "W205",
                            IsValid = true,
                            ModelName = "C-Class",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2014
                        },
                        new
                        {
                            GenericCarModelId = 10,
                            CarBrandId = 4,
                            GenerationName = "MK3",
                            IsValid = true,
                            ModelName = "Superb",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2015
                        },
                        new
                        {
                            GenericCarModelId = 11,
                            CarBrandId = 5,
                            GenerationName = "MK2",
                            IsValid = true,
                            ModelName = "Tiguan",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2016
                        },
                        new
                        {
                            GenericCarModelId = 12,
                            CarBrandId = 6,
                            GenerationName = "F",
                            IsValid = true,
                            ModelName = "Corsa",
                            ProductionEndYear = 2023,
                            ProductionStartYear = 2019
                        },
                        new
                        {
                            GenericCarModelId = 13,
                            CarBrandId = 1,
                            GenerationName = "G30",
                            IsValid = true,
                            ModelName = "5 Series",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2017
                        },
                        new
                        {
                            GenericCarModelId = 14,
                            CarBrandId = 2,
                            GenerationName = "C8",
                            IsValid = true,
                            ModelName = "A6",
                            ProductionEndYear = 2022,
                            ProductionStartYear = 2018
                        },
                        new
                        {
                            GenericCarModelId = 15,
                            CarBrandId = 3,
                            GenerationName = "X253",
                            IsValid = true,
                            ModelName = "GLC",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2015
                        },
                        new
                        {
                            GenericCarModelId = 16,
                            CarBrandId = 4,
                            GenerationName = "NS",
                            IsValid = true,
                            ModelName = "Kodiaq",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2016
                        },
                        new
                        {
                            GenericCarModelId = 17,
                            CarBrandId = 5,
                            GenerationName = "3H",
                            IsValid = true,
                            ModelName = "Arteon",
                            ProductionEndYear = 2022,
                            ProductionStartYear = 2017
                        },
                        new
                        {
                            GenericCarModelId = 18,
                            CarBrandId = 6,
                            GenerationName = "G2",
                            IsValid = true,
                            ModelName = "Insignia",
                            ProductionEndYear = 2022,
                            ProductionStartYear = 2017
                        },
                        new
                        {
                            GenericCarModelId = 19,
                            CarBrandId = 1,
                            GenerationName = "G11",
                            IsValid = true,
                            ModelName = "7 Series",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2015
                        },
                        new
                        {
                            GenericCarModelId = 20,
                            CarBrandId = 2,
                            GenerationName = "4M",
                            IsValid = true,
                            ModelName = "Q7",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2015
                        },
                        new
                        {
                            GenericCarModelId = 21,
                            CarBrandId = 3,
                            GenerationName = "W222",
                            IsValid = true,
                            ModelName = "S-Class",
                            ProductionEndYear = 2020,
                            ProductionStartYear = 2013
                        },
                        new
                        {
                            GenericCarModelId = 22,
                            CarBrandId = 4,
                            GenerationName = "MK3",
                            IsValid = true,
                            ModelName = "Fabia",
                            ProductionEndYear = 2019,
                            ProductionStartYear = 2014
                        },
                        new
                        {
                            GenericCarModelId = 23,
                            CarBrandId = 5,
                            GenerationName = "B8",
                            IsValid = true,
                            ModelName = "Passat",
                            ProductionEndYear = 2019,
                            ProductionStartYear = 2014
                        },
                        new
                        {
                            GenericCarModelId = 24,
                            CarBrandId = 6,
                            GenerationName = "X",
                            IsValid = true,
                            ModelName = "Crossland",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2017
                        },
                        new
                        {
                            GenericCarModelId = 25,
                            CarBrandId = 1,
                            GenerationName = "G01",
                            IsValid = true,
                            ModelName = "X3",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2017
                        },
                        new
                        {
                            GenericCarModelId = 26,
                            CarBrandId = 2,
                            GenerationName = "8V",
                            IsValid = true,
                            ModelName = "A3",
                            ProductionEndYear = 2018,
                            ProductionStartYear = 2012
                        },
                        new
                        {
                            GenericCarModelId = 27,
                            CarBrandId = 3,
                            GenerationName = "C117",
                            IsValid = true,
                            ModelName = "CLA",
                            ProductionEndYear = 2019,
                            ProductionStartYear = 2013
                        },
                        new
                        {
                            GenericCarModelId = 28,
                            CarBrandId = 4,
                            GenerationName = "NU",
                            IsValid = true,
                            ModelName = "Karoq",
                            ProductionEndYear = 2021,
                            ProductionStartYear = 2017
                        },
                        new
                        {
                            GenericCarModelId = 29,
                            CarBrandId = 5,
                            GenerationName = "A1",
                            IsValid = true,
                            ModelName = "T-Roc",
                            ProductionEndYear = 2022,
                            ProductionStartYear = 2017
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.InventoryCarPartLog", b =>
                {
                    b.Property<int>("InventoryCarPartLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarPartId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryLogId")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfParts")
                        .HasColumnType("int");

                    b.HasKey("InventoryCarPartLogId");

                    b.HasIndex("CarPartId");

                    b.HasIndex("InventoryLogId");

                    b.ToTable("InventoryCarPartLog");
                });

            modelBuilder.Entity("muchos_motors_api.Models.InventoryLog", b =>
                {
                    b.Property<int>("InventoryLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.HasKey("InventoryLogId");

                    b.ToTable("InventoryLog");
                });

            modelBuilder.Entity("muchos_motors_api.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("InvoiceCreated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InvoiceCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("muchos_motors_api.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarPartId")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("CarPartId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("muchos_motors_api.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParentId");

                    b.ToTable("Parent");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Parent");
                });

            modelBuilder.Entity("muchos_motors_api.Models.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("UserAccountId");

                    b.HasIndex("CityId");

                    b.ToTable("UserAccount");

                    b.HasDiscriminator<string>("UserType").HasValue("UserAccount");
                });

            modelBuilder.Entity("muchos_motors_api.Models.Child", b =>
                {
                    b.HasBaseType("muchos_motors_api.Models.Parent");

                    b.HasDiscriminator().HasValue("Child");
                });

            modelBuilder.Entity("muchos_motors_api.Models.Customer", b =>
                {
                    b.HasBaseType("muchos_motors_api.Models.UserAccount");

                    b.HasDiscriminator().HasValue("Customer");

                    b.HasData(
                        new
                        {
                            UserAccountId = 1,
                            Address = "Aleja Ljiljana 23",
                            Email = "nino.omic@edu.fit.ba",
                            FirstName = "Nino",
                            IsValid = true,
                            LastName = "Omic",
                            Password = "nino123",
                            Phone = "062222222",
                            Username = "NinoO",
                            isAdmin = false
                        },
                        new
                        {
                            UserAccountId = 2,
                            Address = "Radinovici bb",
                            Email = "dajana.medic@fit.ba",
                            FirstName = "Dajana",
                            IsValid = true,
                            LastName = "Medic",
                            Password = "dajana123",
                            Phone = "063333333",
                            Username = "DajanaM",
                            isAdmin = false
                        },
                        new
                        {
                            UserAccountId = 3,
                            Address = "Aleja Ljiljana 23",
                            Email = "kupac@edu.fit.ba",
                            FirstName = "Kupac",
                            IsValid = true,
                            LastName = "Kupac",
                            Password = "kupac",
                            Phone = "063333333",
                            Username = "kupac",
                            isAdmin = false
                        },
                        new
                        {
                            UserAccountId = 4,
                            Address = "Aleja Ljiljana 23",
                            Email = "amer@edu.fit.ba",
                            FirstName = "Amer",
                            IsValid = true,
                            LastName = "Amer",
                            Password = "amer",
                            Phone = "063333333",
                            Username = "amer",
                            isAdmin = false
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.Employee", b =>
                {
                    b.HasBaseType("muchos_motors_api.Models.UserAccount");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            UserAccountId = 5,
                            Address = "Zenica bb",
                            Email = "asmir.saric@gmail.com",
                            FirstName = "Asmir",
                            IsValid = true,
                            LastName = "Šaric",
                            Password = "asmir123",
                            Username = "AsmirS",
                            isAdmin = false
                        },
                        new
                        {
                            UserAccountId = 6,
                            Address = "Zenica bb",
                            Email = "radnik.radnik@gmail.com",
                            FirstName = "Radnik",
                            IsValid = true,
                            LastName = "Radnik",
                            Password = "radnik",
                            Username = "radnik",
                            isAdmin = false
                        });
                });

            modelBuilder.Entity("muchos_motors_api.Models.Appointment", b =>
                {
                    b.HasOne("muchos_motors_api.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("muchos_motors_api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.AuthenticationCode", b =>
                {
                    b.HasOne("muchos_motors_api.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.AuthenticationToken", b =>
                {
                    b.HasOne("muchos_motors_api.Models.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.Car", b =>
                {
                    b.HasOne("muchos_motors_api.Models.GenericCarModel", "GenericGenerationCarModel")
                        .WithMany()
                        .HasForeignKey("GenericGenerationCarModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.CarPartsCompatibility", b =>
                {
                    b.HasOne("muchos_motors_api.Models.CarPart", "CarPart")
                        .WithMany()
                        .HasForeignKey("CarPartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("muchos_motors_api.Models.GenericCarModel", "GenericCarModel")
                        .WithMany()
                        .HasForeignKey("GenericCarModelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.GenericCarModel", b =>
                {
                    b.HasOne("muchos_motors_api.Models.CarBrand", "CarBrand")
                        .WithMany()
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.InventoryCarPartLog", b =>
                {
                    b.HasOne("muchos_motors_api.Models.CarPart", "CarPart")
                        .WithMany()
                        .HasForeignKey("CarPartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("muchos_motors_api.Models.InventoryLog", "InventoryLog")
                        .WithMany()
                        .HasForeignKey("InventoryLogId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.Order", b =>
                {
                    b.HasOne("muchos_motors_api.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("muchos_motors_api.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("muchos_motors_api.Models.OrderItem", b =>
                {
                    b.HasOne("muchos_motors_api.Models.CarPart", "CarPart")
                        .WithMany()
                        .HasForeignKey("CarPartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("muchos_motors_api.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("muchos_motors_api.Models.UserAccount", b =>
                {
                    b.HasOne("muchos_motors_api.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
